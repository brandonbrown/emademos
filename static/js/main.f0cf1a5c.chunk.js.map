{"version":3,"sources":["logo.svg","ScrollFade.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScrollFade","state","action","setAction","_this","setState","_this2","this","_this$props","props","children","title","when","actionIn","actionOut","react_default","a","createElement","build_default","className","triggers","top","callback","visible","triggerBase","concat","React","Component","App","href","src_ScrollFade","ref","hero","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0cf1a5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport OnScroll from 'react-on-scroll';\n \nclass ScrollFade extends React.Component {\n    state = {\n        action: false,\n    };\n \n    setAction = action => {\n        // console.log(\"SET FADE\")\n        this.setState({ action });\n    }\n    render() {\n        const { title, children, when, actionIn, actionOut } = this.props;\n        const { action } = this.state;\n        return (\n            <OnScroll\n                className=\"section\"\n                triggers={[\n                    { top: when, callback: visible => this.setAction(visible) },\n                ]}\n                triggerBase=\"bottom\"\n            >\n                <div className={`${action ? actionIn : actionOut}`}>{children}</div>\n            </OnScroll>\n        );\n    }\n}\n \nexport default ScrollFade;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport ScrollFade from './ScrollFade'\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header>\n          <div className=\"logo\">EMA</div>\n          <nav>\n            <a href=\"#\">Add Your Band</a>\n            <a href=\"#\">Explore Bands</a>\n            <a href=\"#\">Log In</a>\n            <a href=\"#\">Sign Up</a>\n          </nav>\n        </header>\n        <ScrollFade when={0} actionIn=\"scaleHeroHeader scaleHeroHeaderIn\" actionOut=\"scaleHeroHeader scaleHeroHeaderOut\">\n          <section className=\"heroHeader\">\n            <h2 className=\"bandNameLarge\">Cradle of Filth</h2>\n            <a href=\"#\" className=\"buttonLarge\">Get Elite Access</a>\n            <p className=\"eliteFans\">5342 Elite Fans</p>\n            <section className=\"metaActions\">\n              <a href=\"#\" className=\"buttonMeta\">Follow</a>\n              <a href=\"#\" className=\"buttonMeta\">Share</a>\n            </section>\n          </section>\n        </ScrollFade>\n        <ScrollFade when={200} actionIn=\"sendSecondHeader sendSecondHeaderIn\" actionOut=\"sendSecondHeader sendSecondHeaderOut\">\n          <section className=\"secondHeader\">\n            <div className=\"secondBandInfo\">\n              <p className=\"eliteFansDark\">5342 Elite Fans</p>\n              <h2 className=\"secondHeaderTitle\">Cradle of Filth</h2>\n            </div>\n            <section className=\"metaActionsDark\">\n              <a href=\"#\" className=\"buttonMetaDark\">Follow</a>\n              <a href=\"#\" className=\"buttonMetaDark\">Share</a>\n              <a href=\"#\" className=\"buttonLarge secondHeaderCTA\">Get Elite Access</a>\n            </section>\n          </section>\n        </ScrollFade>\n        <main>\n        \n          <ScrollFade when={300} actionIn=\"fadeHero fadeHeroIn\" actionOut=\"fadeHero fadeHeroOut\">\n              <section className=\"hero\" ref={this.hero}>\n\n              </section>\n          </ScrollFade>\n          \n          <section className=\"feed\">\n            <article>\n              <div className=\"imgContainer\">\n\n              </div>\n              <div className=\"contentContainer\">\n                <h3>Back On The Road</h3>\n                <section className=\"articleMeta\">\n                  <p>Elite Fan Exclusive</p>\n                  <p>6:56PM February 14, 2019</p>\n                </section>\n                <p>Becoming an Elite Fan unlocks exclusive content, merchandise, tour announcements, and more from Cradle of Filth. Show your dedication to your favorite musicians with monthly memberships starting at $5.55.</p>\n              </div>\n              <div className=\"interactions\">\n                <p>756 Likes</p>\n                <p>135 Comments</p>\n              </div>\n            </article>\n            <article>\n              <div className=\"imgContainer\">\n\n              </div>\n              <div className=\"contentContainer\">\n                <h3>Back On The Road</h3>\n                <section className=\"articleMeta\">\n                  <p>Elite Fan Exclusive</p>\n                  <p>6:56PM February 14, 2019</p>\n                </section>\n                <p>Becoming an Elite Fan unlocks exclusive content, merchandise, tour announcements, and more from Cradle of Filth. Show your dedication to your favorite musicians with monthly memberships starting at $5.55.</p>\n              </div>\n              <div className=\"interactions\">\n                <p>756 Likes</p>\n                <p>135 Comments</p>\n              </div>\n            </article>\n            <article>\n              <div className=\"imgContainer\">\n\n              </div>\n              <div className=\"contentContainer\">\n                <h3>Back On The Road</h3>\n                <section className=\"articleMeta\">\n                  <p>Elite Fan Exclusive</p>\n                  <p>6:56PM February 14, 2019</p>\n                </section>\n                <p>Becoming an Elite Fan unlocks exclusive content, merchandise, tour announcements, and more from Cradle of Filth. Show your dedication to your favorite musicians with monthly memberships starting at $5.55.</p>\n              </div>\n              <div className=\"interactions\">\n                <p>756 Likes</p>\n                <p>135 Comments</p>\n              </div>\n            </article>\n          </section>\n        </main>\n        <footer>footer</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}